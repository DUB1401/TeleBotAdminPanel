from ..InlineKeyboards import InlineKeyboards
from .Mailing import MailingReplyTemplates
from ..Structs import UserInput
from ..Mailer import Mailer

from dublib.TelebotUtils import UsersManager

from telebot import TeleBot, types

class ReplyTemplates:
	"""–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Reply-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""

	def admin() -> types.ReplyKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç –∫–Ω–æ–ø–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""

		Menu = types.ReplyKeyboardMarkup(resize_keyboard = True)
		Mailing = types.KeyboardButton("üë§ –†–∞—Å—Å—ã–ª–∫–∞")
		Statistics = types.KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		Close = types.KeyboardButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å")
		Menu.add(Mailing, Statistics, Close, row_width = 2)

		return Menu

	def cancel() -> types.ReplyKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç –∫–Ω–æ–ø–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –æ—Ç–º–µ–Ω–∞."""

		Menu = types.ReplyKeyboardMarkup(resize_keyboard = True)
		Cancel = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")
		Menu.add(Cancel)

		return Menu
	
	def editing() -> types.ReplyKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç –∫–Ω–æ–ø–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""

		Menu = types.ReplyKeyboardMarkup(resize_keyboard = True)
		Ok = types.KeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å")
		Cancel = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")
		Menu.add(Ok, Cancel, row_width = 1)

		return Menu
	
class ReplyFunctions:

	def Selection(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üéØ –í—ã–±–æ—Ä–∫–∞
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		User.set_expected_type(UserInput.Sampling.value)
		Options = User.get_property("ap")
		Sampling = Options["sampling"]

		if type(Sampling) == int: Sampling = f"<i>{Sampling} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</i>"
		elif type(Sampling) == str: Sampling = f"@{Sampling}"
		elif Sampling == None: Sampling = "üö´"

		bot.send_message(
			chat_id = message.chat.id,
			text = f"<b>–£–∫–∞–∂–∏—Ç–µ –≤—ã–±–æ—Ä–∫—É</b>\n\n–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users.users)}\n–¢–µ–∫—É—â–∞—è –≤—ã–±–æ—Ä–∫–∞: {Sampling}",
			parse_mode = "HTML",
			reply_markup = InlineKeyboards.sampling(User)
		)

	def AddButton(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üïπÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		User.set_expected_type(UserInput.ButtonLabel.value)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∫–Ω–æ–ø–∫–∏.",
			reply_markup = ReplyTemplates.cancel()
		)

	def Done(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		User.set_expected_type(None)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.",
			reply_markup = MailingReplyTemplates.mailing(User)
		)

	def Close(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: ‚ùå –ó–∞–∫—Ä—ã—Ç—å
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		Options = User.get_property("ap")
		Options["is_open"] = False
		User.set_property("ap", Options)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∞.",
			reply_markup = types.ReplyKeyboardRemove()
		)

	def StartMailing(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""
		
		User = users.auth(message.from_user)
		User.set_object("mailer", Mailer(bot))
		Options = User.get_property("ap")

		if not Options["mailing_caption"] and not Options["mailing_content"]:
			bot.send_message(
				chat_id = message.chat.id,
				text = "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."
			)

		else: 
			Object: Mailer = User.get_object("mailer")
			Object.start_mailing(User, users)

	def Back(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: ‚Ü©Ô∏è –ù–∞–∑–∞–¥
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
			reply_markup = ReplyTemplates.admin()
		)

	def Cancel(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: ‚ùå –û—Ç–º–µ–Ω–∞
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		
		if User.expected_type == UserInput.Message.value:
			Options = User.get_property("ap")
			User.set_expected_type(UserInput.Message.value)
			Caption = Options["temp_mailing_caption"]
			Content = Options["temp_mailing_content"]
			Options["mailing_caption"] = Caption
			Options["mailing_content"] = Content
			del Options["temp_mailing_caption"]
			del Options["temp_mailing_content"]
			User.set_property("ap", Options)

		User.set_expected_type(None)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
			reply_markup = MailingReplyTemplates.mailing(User)
		)

	def StopMailing(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		Options = User.get_property("ap")
		Options["mailing"] = None
		User.set_property("ap", Options)

	def View(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üîé –ü—Ä–æ—Å–º–æ—Ç—Ä
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		Options = User.get_property("ap")

		if not Options["mailing_caption"] and not Options["mailing_content"]:
			bot.send_message(
				chat_id = message.chat.id,
				text = "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."
			)

		else: Mailer(bot).send_message(User, User)

	def Mailing(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üë§ –†–∞—Å—Å—ã–ª–∫–∞
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		User = users.auth(message.from_user)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–æ–π.",
			reply_markup = MailingReplyTemplates.mailing(User)
		)

	def Edit(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""
		User = users.auth(message.from_user)
		Options = User.get_property("ap")
		User.set_expected_type(UserInput.Message.value)
		Caption = Options["mailing_caption"]
		Content = Options["mailing_content"]
		Options["temp_mailing_caption"] = Caption
		Options["temp_mailing_content"] = Content
		Options["mailing_caption"] = None
		Options["mailing_content"] = list()
		User.set_property("ap", Options)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ä–∞—Å—Å—ã–ª–∫–µ.\n\n–ï—Å–ª–∏ –≤—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–ª–æ–∂–µ–Ω–∏–π, –¥–ª—è –∏—Ö —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.",
			reply_markup = ReplyTemplates.editing()
		)

	def Statistics(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""
		User = users.auth(message.from_user)

		UsersCount = len(users.users)
		BlockedUsersCount = 0

		for user in users.users:
			if user.is_chat_forbidden: BlockedUsersCount += 1

		Counts = [len(users.premium_users), len(users.get_active_users()), BlockedUsersCount]
		Percentages = [None, None, None]

		for Index in range(len(Counts)):
			Percentages[Index] = round(Counts[Index] / UsersCount * 100, 1)
			if str(Percentages[Index]).endswith(".0"): Percentages[Index] = int(Percentages[Index])

		Text = (
			"<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n",
			f"üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{UsersCount}</b>",
			f"‚≠ê –ò–∑ –Ω–∏—Ö Premium: <b>{Counts[0]}</b> (<i>{Percentages[0]}%</i>)",
			f"üß© –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ —Å—É—Ç–∫–∏: <b>{Counts[1]}</b> (<i>{Percentages[1]}%</i>)",
			f"‚õî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏: <b>{Counts[2]}</b> (<i>{Percentages[2]}%</i>)"
		)

		bot.send_message(
			chat_id = message.chat.id,
			text = "\n".join(Text),
			parse_mode = "HTML",
			reply_markup = InlineKeyboards.extract() 
		)

	def RemoveButton(bot: TeleBot, users: UsersManager, message: types.Message):
		"""
		–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Reply-–∫–Ω–æ–ø–∫—É: üïπÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;\n
			message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""
		User = users.auth(message.from_user)
		Options = User.get_property("ap")
		Options["button_label"] = None
		Options["button_link"] = None
		User.set_property("ap", Options)
		bot.send_message(
			chat_id = message.chat.id,
			text = "–ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞.",
			reply_markup = MailingReplyTemplates.mailing(User)
		)